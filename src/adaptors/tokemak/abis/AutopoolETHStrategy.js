module.exports = {
  autopoolETHStrategyAbi: [
    {
      inputs: [
        {
          internalType: 'contract ISystemRegistry',
          name: '_systemRegistry',
          type: 'address',
        },
        {
          components: [
            {
              components: [
                { internalType: 'uint16', name: 'initInDays', type: 'uint16' },
                {
                  internalType: 'uint16',
                  name: 'tightenThresholdInViolations',
                  type: 'uint16',
                },
                {
                  internalType: 'uint16',
                  name: 'tightenStepInDays',
                  type: 'uint16',
                },
                {
                  internalType: 'uint16',
                  name: 'relaxThresholdInDays',
                  type: 'uint16',
                },
                {
                  internalType: 'uint16',
                  name: 'relaxStepInDays',
                  type: 'uint16',
                },
                { internalType: 'uint16', name: 'maxInDays', type: 'uint16' },
                { internalType: 'uint16', name: 'minInDays', type: 'uint16' },
              ],
              internalType:
                'struct AutopoolETHStrategyConfig.SwapCostOffsetConfig',
              name: 'swapCostOffset',
              type: 'tuple',
            },
            {
              components: [
                {
                  internalType: 'uint8',
                  name: 'lookback1InDays',
                  type: 'uint8',
                },
                {
                  internalType: 'uint8',
                  name: 'lookback2InDays',
                  type: 'uint8',
                },
                {
                  internalType: 'uint8',
                  name: 'lookback3InDays',
                  type: 'uint8',
                },
              ],
              internalType:
                'struct AutopoolETHStrategyConfig.NavLookbackConfig',
              name: 'navLookback',
              type: 'tuple',
            },
            {
              components: [
                {
                  internalType: 'uint256',
                  name: 'maxNormalOperationSlippage',
                  type: 'uint256',
                },
                {
                  internalType: 'uint256',
                  name: 'maxTrimOperationSlippage',
                  type: 'uint256',
                },
                {
                  internalType: 'uint256',
                  name: 'maxEmergencyOperationSlippage',
                  type: 'uint256',
                },
                {
                  internalType: 'uint256',
                  name: 'maxShutdownOperationSlippage',
                  type: 'uint256',
                },
              ],
              internalType: 'struct AutopoolETHStrategyConfig.SlippageConfig',
              name: 'slippage',
              type: 'tuple',
            },
            {
              components: [
                { internalType: 'uint256', name: 'baseYield', type: 'uint256' },
                { internalType: 'uint256', name: 'feeYield', type: 'uint256' },
                {
                  internalType: 'uint256',
                  name: 'incentiveYield',
                  type: 'uint256',
                },
                {
                  internalType: 'int256',
                  name: 'priceDiscountExit',
                  type: 'int256',
                },
                {
                  internalType: 'int256',
                  name: 'priceDiscountEnter',
                  type: 'int256',
                },
                {
                  internalType: 'int256',
                  name: 'pricePremium',
                  type: 'int256',
                },
              ],
              internalType: 'struct AutopoolETHStrategyConfig.ModelWeights',
              name: 'modelWeights',
              type: 'tuple',
            },
            {
              internalType: 'uint16',
              name: 'pauseRebalancePeriodInDays',
              type: 'uint16',
            },
            {
              internalType: 'uint256',
              name: 'rebalanceTimeGapInSeconds',
              type: 'uint256',
            },
            { internalType: 'int256', name: 'maxPremium', type: 'int256' },
            { internalType: 'int256', name: 'maxDiscount', type: 'int256' },
            {
              internalType: 'uint40',
              name: 'staleDataToleranceInSeconds',
              type: 'uint40',
            },
            {
              internalType: 'int256',
              name: 'maxAllowedDiscount',
              type: 'int256',
            },
            {
              internalType: 'uint256',
              name: 'lstPriceGapTolerance',
              type: 'uint256',
            },
            { internalType: 'address[5]', name: 'hooks', type: 'address[5]' },
          ],
          internalType: 'struct AutopoolETHStrategyConfig.StrategyConfig',
          name: 'conf',
          type: 'tuple',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'constructor',
    },
    { inputs: [], name: 'AccessDenied', type: 'error' },
    { inputs: [], name: 'CannotConvertUintToInt', type: 'error' },
    { inputs: [], name: 'CannotConvertUintToInt', type: 'error' },
    { inputs: [], name: 'IdleHighThresholdViolated', type: 'error' },
    { inputs: [], name: 'InconsistentIdleThresholds', type: 'error' },
    {
      inputs: [{ internalType: 'address', name: 'asset', type: 'address' }],
      name: 'InsufficientAssets',
      type: 'error',
    },
    {
      inputs: [{ internalType: 'string', name: 'paramName', type: 'string' }],
      name: 'InvalidConfig',
      type: 'error',
    },
    {
      inputs: [
        { internalType: 'uint40', name: 'current', type: 'uint40' },
        { internalType: 'uint40', name: 'provided', type: 'uint40' },
      ],
      name: 'InvalidNavTimestamp',
      type: 'error',
    },
    {
      inputs: [{ internalType: 'string', name: 'paramName', type: 'string' }],
      name: 'InvalidParam',
      type: 'error',
    },
    { inputs: [], name: 'InvalidRebalanceToIdle', type: 'error' },
    { inputs: [], name: 'LSTPriceGapToleranceExceeded', type: 'error' },
    { inputs: [], name: 'MaxDiscountExceeded', type: 'error' },
    { inputs: [], name: 'MaxPremiumExceeded', type: 'error' },
    { inputs: [], name: 'MaxSlippageExceeded', type: 'error' },
    { inputs: [], name: 'NavHistoryInsufficient', type: 'error' },
    { inputs: [], name: 'NotAutopoolETH', type: 'error' },
    { inputs: [], name: 'OnlyRebalanceToIdleAvailable', type: 'error' },
    {
      inputs: [
        { internalType: 'address', name: 'destination', type: 'address' },
        { internalType: 'address', name: 'trueUnderlyer', type: 'address' },
        { internalType: 'address', name: 'providedUnderlyer', type: 'address' },
      ],
      name: 'RebalanceDestinationUnderlyerMismatch',
      type: 'error',
    },
    { inputs: [], name: 'RebalanceDestinationsMatch', type: 'error' },
    { inputs: [], name: 'RebalanceTimeGapNotMet', type: 'error' },
    {
      inputs: [{ internalType: 'string', name: 'name', type: 'string' }],
      name: 'StaleData',
      type: 'error',
    },
    { inputs: [], name: 'StrategyPaused', type: 'error' },
    { inputs: [], name: 'SwapCostExceeded', type: 'error' },
    { inputs: [], name: 'SystemRegistryMismatch', type: 'error' },
    { inputs: [], name: 'UndefinedAddress', type: 'error' },
    {
      inputs: [{ internalType: 'address', name: 'dest', type: 'address' }],
      name: 'UnregisteredDestination',
      type: 'error',
    },
    {
      inputs: [{ internalType: 'string', name: 'paramName', type: 'string' }],
      name: 'ZeroAddress',
      type: 'error',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'assetIndex',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'numViolationsOne',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'numViolationsTwo',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'int256',
          name: 'discount',
          type: 'int256',
        },
      ],
      name: 'DestTrimRebalanceDetails',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'trimAmount',
          type: 'uint256',
        },
      ],
      name: 'DestViolationMaxTrimAmount',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'newValue',
          type: 'uint256',
        },
      ],
      name: 'DustPositionPortionSet',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'newLowValue',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'newHighValue',
          type: 'uint256',
        },
      ],
      name: 'IdleThresholdsSet',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint8',
          name: 'version',
          type: 'uint8',
        },
      ],
      name: 'Initialized',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'newPriceGap',
          type: 'uint256',
        },
      ],
      name: 'LstPriceGapSet',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'navPerShare',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'nav1',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'nav2',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'nav3',
          type: 'uint256',
        },
      ],
      name: 'PauseStart',
      type: 'event',
    },
    { anonymous: false, inputs: [], name: 'PauseStop', type: 'event' },
    {
      anonymous: false,
      inputs: [
        {
          components: [
            { internalType: 'uint256', name: 'inPrice', type: 'uint256' },
            { internalType: 'uint256', name: 'outPrice', type: 'uint256' },
            { internalType: 'uint256', name: 'inEthValue', type: 'uint256' },
            { internalType: 'uint256', name: 'outEthValue', type: 'uint256' },
            { internalType: 'uint256', name: 'swapCost', type: 'uint256' },
            { internalType: 'uint256', name: 'slippage', type: 'uint256' },
          ],
          indexed: false,
          internalType: 'struct SummaryStats.RebalanceValueStats',
          name: 'valueStats',
          type: 'tuple',
        },
        {
          components: [
            { internalType: 'address', name: 'destinationIn', type: 'address' },
            { internalType: 'address', name: 'tokenIn', type: 'address' },
            { internalType: 'uint256', name: 'amountIn', type: 'uint256' },
            {
              internalType: 'address',
              name: 'destinationOut',
              type: 'address',
            },
            { internalType: 'address', name: 'tokenOut', type: 'address' },
            { internalType: 'uint256', name: 'amountOut', type: 'uint256' },
          ],
          indexed: false,
          internalType: 'struct IStrategy.RebalanceParams',
          name: 'params',
          type: 'tuple',
        },
        {
          components: [
            { internalType: 'address', name: 'destination', type: 'address' },
            { internalType: 'uint256', name: 'baseApr', type: 'uint256' },
            { internalType: 'uint256', name: 'feeApr', type: 'uint256' },
            { internalType: 'uint256', name: 'incentiveApr', type: 'uint256' },
            {
              internalType: 'uint256',
              name: 'safeTotalSupply',
              type: 'uint256',
            },
            { internalType: 'int256', name: 'priceReturn', type: 'int256' },
            { internalType: 'int256', name: 'maxDiscount', type: 'int256' },
            { internalType: 'int256', name: 'maxPremium', type: 'int256' },
            { internalType: 'uint256', name: 'ownedShares', type: 'uint256' },
            { internalType: 'int256', name: 'compositeReturn', type: 'int256' },
            { internalType: 'uint256', name: 'pricePerShare', type: 'uint256' },
          ],
          indexed: false,
          internalType: 'struct IStrategy.SummaryStats',
          name: 'outSummaryStats',
          type: 'tuple',
        },
        {
          components: [
            { internalType: 'address', name: 'destination', type: 'address' },
            { internalType: 'uint256', name: 'baseApr', type: 'uint256' },
            { internalType: 'uint256', name: 'feeApr', type: 'uint256' },
            { internalType: 'uint256', name: 'incentiveApr', type: 'uint256' },
            {
              internalType: 'uint256',
              name: 'safeTotalSupply',
              type: 'uint256',
            },
            { internalType: 'int256', name: 'priceReturn', type: 'int256' },
            { internalType: 'int256', name: 'maxDiscount', type: 'int256' },
            { internalType: 'int256', name: 'maxPremium', type: 'int256' },
            { internalType: 'uint256', name: 'ownedShares', type: 'uint256' },
            { internalType: 'int256', name: 'compositeReturn', type: 'int256' },
            { internalType: 'uint256', name: 'pricePerShare', type: 'uint256' },
          ],
          indexed: false,
          internalType: 'struct IStrategy.SummaryStats',
          name: 'inSummaryStats',
          type: 'tuple',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'swapOffsetPeriod',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'int256',
          name: 'predictedAnnualizedGain',
          type: 'int256',
        },
      ],
      name: 'RebalanceBetweenDestinations',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          components: [
            { internalType: 'uint256', name: 'inPrice', type: 'uint256' },
            { internalType: 'uint256', name: 'outPrice', type: 'uint256' },
            { internalType: 'uint256', name: 'inEthValue', type: 'uint256' },
            { internalType: 'uint256', name: 'outEthValue', type: 'uint256' },
            { internalType: 'uint256', name: 'swapCost', type: 'uint256' },
            { internalType: 'uint256', name: 'slippage', type: 'uint256' },
          ],
          indexed: false,
          internalType: 'struct SummaryStats.RebalanceValueStats',
          name: 'valueStats',
          type: 'tuple',
        },
        {
          components: [
            { internalType: 'address', name: 'destination', type: 'address' },
            { internalType: 'uint256', name: 'baseApr', type: 'uint256' },
            { internalType: 'uint256', name: 'feeApr', type: 'uint256' },
            { internalType: 'uint256', name: 'incentiveApr', type: 'uint256' },
            {
              internalType: 'uint256',
              name: 'safeTotalSupply',
              type: 'uint256',
            },
            { internalType: 'int256', name: 'priceReturn', type: 'int256' },
            { internalType: 'int256', name: 'maxDiscount', type: 'int256' },
            { internalType: 'int256', name: 'maxPremium', type: 'int256' },
            { internalType: 'uint256', name: 'ownedShares', type: 'uint256' },
            { internalType: 'int256', name: 'compositeReturn', type: 'int256' },
            { internalType: 'uint256', name: 'pricePerShare', type: 'uint256' },
          ],
          indexed: false,
          internalType: 'struct IStrategy.SummaryStats',
          name: 'outSummary',
          type: 'tuple',
        },
        {
          components: [
            { internalType: 'address', name: 'destinationIn', type: 'address' },
            { internalType: 'address', name: 'tokenIn', type: 'address' },
            { internalType: 'uint256', name: 'amountIn', type: 'uint256' },
            {
              internalType: 'address',
              name: 'destinationOut',
              type: 'address',
            },
            { internalType: 'address', name: 'tokenOut', type: 'address' },
            { internalType: 'uint256', name: 'amountOut', type: 'uint256' },
          ],
          indexed: false,
          internalType: 'struct IStrategy.RebalanceParams',
          name: 'params',
          type: 'tuple',
        },
      ],
      name: 'RebalanceToIdle',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'enum AutopoolETHStrategy.RebalanceToIdleReasonEnum',
          name: 'reason',
          type: 'uint8',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'maxSlippage',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'slippage',
          type: 'uint256',
        },
      ],
      name: 'RebalanceToIdleReason',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'address',
          name: 'destinationOut',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'uint40',
          name: 'lastRebalanceTimestamp',
          type: 'uint40',
        },
        {
          indexed: false,
          internalType: 'uint40',
          name: 'lastTimestampAddedToDestination',
          type: 'uint40',
        },
        {
          indexed: false,
          internalType: 'uint40',
          name: 'swapCostOffsetPeriod',
          type: 'uint40',
        },
      ],
      name: 'SuccessfulRebalanceBetweenDestinations',
      type: 'event',
    },
    {
      inputs: [],
      name: 'accessController',
      outputs: [
        {
          internalType: 'contract IAccessController',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'autoPool',
      outputs: [
        { internalType: 'contract IAutopool', name: '', type: 'address' },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'defaultLstPriceGapTolerance',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'dustPositionPortions',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'expiredRewardTolerance',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'pure',
      type: 'function',
    },
    {
      inputs: [
        { internalType: 'address', name: 'destAddress', type: 'address' },
        {
          internalType: 'enum IAutopoolStrategy.RebalanceDirection',
          name: 'direction',
          type: 'uint8',
        },
        { internalType: 'uint256', name: 'amount', type: 'uint256' },
      ],
      name: 'getDestinationSummaryStats',
      outputs: [
        {
          components: [
            { internalType: 'address', name: 'destination', type: 'address' },
            { internalType: 'uint256', name: 'baseApr', type: 'uint256' },
            { internalType: 'uint256', name: 'feeApr', type: 'uint256' },
            { internalType: 'uint256', name: 'incentiveApr', type: 'uint256' },
            {
              internalType: 'uint256',
              name: 'safeTotalSupply',
              type: 'uint256',
            },
            { internalType: 'int256', name: 'priceReturn', type: 'int256' },
            { internalType: 'int256', name: 'maxDiscount', type: 'int256' },
            { internalType: 'int256', name: 'maxPremium', type: 'int256' },
            { internalType: 'uint256', name: 'ownedShares', type: 'uint256' },
            { internalType: 'int256', name: 'compositeReturn', type: 'int256' },
            { internalType: 'uint256', name: 'pricePerShare', type: 'uint256' },
          ],
          internalType: 'struct IStrategy.SummaryStats',
          name: '',
          type: 'tuple',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'getHooks',
      outputs: [
        { internalType: 'address[]', name: 'hooks', type: 'address[]' },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          components: [
            { internalType: 'address', name: 'destinationIn', type: 'address' },
            { internalType: 'address', name: 'tokenIn', type: 'address' },
            { internalType: 'uint256', name: 'amountIn', type: 'uint256' },
            {
              internalType: 'address',
              name: 'destinationOut',
              type: 'address',
            },
            { internalType: 'address', name: 'tokenOut', type: 'address' },
            { internalType: 'uint256', name: 'amountOut', type: 'uint256' },
          ],
          internalType: 'struct IStrategy.RebalanceParams',
          name: 'rebalanceParams',
          type: 'tuple',
        },
      ],
      name: 'getRebalanceOutSummaryStats',
      outputs: [
        {
          components: [
            { internalType: 'address', name: 'destination', type: 'address' },
            { internalType: 'uint256', name: 'baseApr', type: 'uint256' },
            { internalType: 'uint256', name: 'feeApr', type: 'uint256' },
            { internalType: 'uint256', name: 'incentiveApr', type: 'uint256' },
            {
              internalType: 'uint256',
              name: 'safeTotalSupply',
              type: 'uint256',
            },
            { internalType: 'int256', name: 'priceReturn', type: 'int256' },
            { internalType: 'int256', name: 'maxDiscount', type: 'int256' },
            { internalType: 'int256', name: 'maxPremium', type: 'int256' },
            { internalType: 'uint256', name: 'ownedShares', type: 'uint256' },
            { internalType: 'int256', name: 'compositeReturn', type: 'int256' },
            { internalType: 'uint256', name: 'pricePerShare', type: 'uint256' },
          ],
          internalType: 'struct IStrategy.SummaryStats',
          name: 'outSummary',
          type: 'tuple',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'getSystemRegistry',
      outputs: [{ internalType: 'address', name: '', type: 'address' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'idleHighThreshold',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'idleLowThreshold',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'address', name: '_autoPool', type: 'address' }],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'address', name: '', type: 'address' }],
      name: 'lastAddTimestampByDestination',
      outputs: [{ internalType: 'uint40', name: '', type: 'uint40' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'lastPausedTimestamp',
      outputs: [{ internalType: 'uint40', name: '', type: 'uint40' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'lastRebalanceTimestamp',
      outputs: [{ internalType: 'uint40', name: '', type: 'uint40' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'lstPriceGapTolerance',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'maxAllowedDiscount',
      outputs: [{ internalType: 'int256', name: '', type: 'int256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'maxDiscount',
      outputs: [{ internalType: 'int256', name: '', type: 'int256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'maxEmergencyOperationSlippage',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'maxNormalOperationSlippage',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'maxPremium',
      outputs: [{ internalType: 'int256', name: '', type: 'int256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'maxShutdownOperationSlippage',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'maxTrimOperationSlippage',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'navLookback1InDays',
      outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'navLookback2InDays',
      outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'navLookback3InDays',
      outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'navTrackingState',
      outputs: [
        { internalType: 'uint8', name: 'len', type: 'uint8' },
        { internalType: 'uint8', name: 'currentIndex', type: 'uint8' },
        {
          internalType: 'uint40',
          name: 'lastFinalizedTimestamp',
          type: 'uint40',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        { internalType: 'uint256', name: 'navPerShare', type: 'uint256' },
      ],
      name: 'navUpdate',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'pauseRebalancePeriodInDays',
      outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'paused',
      outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          components: [
            { internalType: 'address', name: 'destinationIn', type: 'address' },
            { internalType: 'address', name: 'tokenIn', type: 'address' },
            { internalType: 'uint256', name: 'amountIn', type: 'uint256' },
            {
              internalType: 'address',
              name: 'destinationOut',
              type: 'address',
            },
            { internalType: 'address', name: 'tokenOut', type: 'address' },
            { internalType: 'uint256', name: 'amountOut', type: 'uint256' },
          ],
          internalType: 'struct IStrategy.RebalanceParams',
          name: 'params',
          type: 'tuple',
        },
      ],
      name: 'rebalanceSuccessfullyExecuted',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'rebalanceTimeGapInSeconds',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'uint256', name: 'newValue', type: 'uint256' }],
      name: 'setDustPositionPortions',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        { internalType: 'uint256', name: 'newLowValue', type: 'uint256' },
        { internalType: 'uint256', name: 'newHighValue', type: 'uint256' },
      ],
      name: 'setIdleThresholds',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        { internalType: 'uint256', name: 'priceGapTolerance', type: 'uint256' },
      ],
      name: 'setLstPriceGapTolerance',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'staleDataToleranceInSeconds',
      outputs: [{ internalType: 'uint40', name: '', type: 'uint40' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'swapCostOffsetInit',
      outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'swapCostOffsetInitInDays',
      outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'swapCostOffsetMaxInDays',
      outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'swapCostOffsetMinInDays',
      outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'swapCostOffsetPeriodInDays',
      outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'swapCostOffsetRelaxStepInDays',
      outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'swapCostOffsetRelaxThresholdInDays',
      outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'swapCostOffsetTightenStepInDays',
      outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'swapCostOffsetTightenThresholdInViolations',
      outputs: [{ internalType: 'uint16', name: '', type: 'uint16' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          components: [
            { internalType: 'address', name: 'destinationIn', type: 'address' },
            { internalType: 'address', name: 'tokenIn', type: 'address' },
            { internalType: 'uint256', name: 'amountIn', type: 'uint256' },
            {
              internalType: 'address',
              name: 'destinationOut',
              type: 'address',
            },
            { internalType: 'address', name: 'tokenOut', type: 'address' },
            { internalType: 'uint256', name: 'amountOut', type: 'uint256' },
          ],
          internalType: 'struct IStrategy.RebalanceParams',
          name: 'params',
          type: 'tuple',
        },
        {
          components: [
            { internalType: 'address', name: 'destination', type: 'address' },
            { internalType: 'uint256', name: 'baseApr', type: 'uint256' },
            { internalType: 'uint256', name: 'feeApr', type: 'uint256' },
            { internalType: 'uint256', name: 'incentiveApr', type: 'uint256' },
            {
              internalType: 'uint256',
              name: 'safeTotalSupply',
              type: 'uint256',
            },
            { internalType: 'int256', name: 'priceReturn', type: 'int256' },
            { internalType: 'int256', name: 'maxDiscount', type: 'int256' },
            { internalType: 'int256', name: 'maxPremium', type: 'int256' },
            { internalType: 'uint256', name: 'ownedShares', type: 'uint256' },
            { internalType: 'int256', name: 'compositeReturn', type: 'int256' },
            { internalType: 'uint256', name: 'pricePerShare', type: 'uint256' },
          ],
          internalType: 'struct IStrategy.SummaryStats',
          name: 'outSummary',
          type: 'tuple',
        },
      ],
      name: 'verifyRebalance',
      outputs: [
        { internalType: 'bool', name: 'success', type: 'bool' },
        { internalType: 'string', name: 'message', type: 'string' },
      ],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'violationTrackingState',
      outputs: [
        { internalType: 'uint8', name: 'violationCount', type: 'uint8' },
        { internalType: 'uint8', name: 'len', type: 'uint8' },
        { internalType: 'uint16', name: 'violations', type: 'uint16' },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'weightBase',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'weightFee',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'weightIncentive',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'weightPriceDiscountEnter',
      outputs: [{ internalType: 'int256', name: '', type: 'int256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'weightPriceDiscountExit',
      outputs: [{ internalType: 'int256', name: '', type: 'int256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'weightPricePremium',
      outputs: [{ internalType: 'int256', name: '', type: 'int256' }],
      stateMutability: 'view',
      type: 'function',
    },
  ],
};
